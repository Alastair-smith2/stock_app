// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`The Login screen It should render Should render 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Login
    appData={
      Object {
        "authenticated": false,
        "currencyData": null,
        "dataFetched": false,
        "error": false,
        "isFetching": false,
        "stockCode": "",
        "stockData": Array [],
      }
    }
    login={[MockFunction]}
    navigation={
      Object {
        "dispatch": [MockFunction],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 0.2,
              "justifyContent": "center",
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontFamily": "Futura",
                "fontSize": 24,
                "fontWeight": "500",
              }
            }
          >
            Stock & Exchange Search
          </Text>
        </View>,
        <View
          style={
            Object {
              "flex": 0.1,
              "margin": 10,
            }
          }
        >
          <Input
            label="Username"
            onTextInput={[Function]}
            type="username"
            value=""
          />
        </View>,
        <View
          style={
            Object {
              "flex": 0.1,
              "margin": 10,
            }
          }
        >
          <Input
            label="Password"
            onTextInput={[Function]}
            type="password"
            value=""
          />
        </View>,
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 0.3,
              "flexDirection": "row",
              "justifyContent": "center",
            }
          }
        >
          <Button
            buttonPress={[Function]}
            buttonStyle={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EA572D",
                "borderRadius": 60,
                "flex": 0.5,
                "justifyContent": "center",
                "padding": 15,
              }
            }
            title="Submit"
          />
        </View>,
      ],
      "style": Object {
        "backgroundColor": "#fff",
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontFamily": "Futura",
                "fontSize": 24,
                "fontWeight": "500",
              }
            }
          >
            Stock & Exchange Search
          </Text>,
          "style": Object {
            "alignItems": "center",
            "flex": 0.2,
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "accessible": true,
            "allowFontScaling": true,
            "children": "Stock & Exchange Search",
            "ellipsizeMode": "tail",
            "style": Object {
              "fontFamily": "Futura",
              "fontSize": 24,
              "fontWeight": "500",
            },
          },
          "ref": null,
          "rendered": "Stock & Exchange Search",
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Input
            label="Username"
            onTextInput={[Function]}
            type="username"
            value=""
          />,
          "style": Object {
            "flex": 0.1,
            "margin": 10,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "label": "Username",
            "onTextInput": [Function],
            "type": "username",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Input
            label="Password"
            onTextInput={[Function]}
            type="password"
            value=""
          />,
          "style": Object {
            "flex": 0.1,
            "margin": 10,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "label": "Password",
            "onTextInput": [Function],
            "type": "password",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Button
            buttonPress={[Function]}
            buttonStyle={
              Object {
                "alignItems": "center",
                "backgroundColor": "#EA572D",
                "borderRadius": 60,
                "flex": 0.5,
                "justifyContent": "center",
                "padding": 15,
              }
            }
            title="Submit"
          />,
          "style": Object {
            "alignItems": "center",
            "flex": 0.3,
            "flexDirection": "row",
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "buttonPress": [Function],
            "buttonStyle": Object {
              "alignItems": "center",
              "backgroundColor": "#EA572D",
              "borderRadius": 60,
              "flex": 0.5,
              "justifyContent": "center",
              "padding": 15,
            },
            "title": "Submit",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 0.2,
                "justifyContent": "center",
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontFamily": "Futura",
                  "fontSize": 24,
                  "fontWeight": "500",
                }
              }
            >
              Stock & Exchange Search
            </Text>
          </View>,
          <View
            style={
              Object {
                "flex": 0.1,
                "margin": 10,
              }
            }
          >
            <Input
              label="Username"
              onTextInput={[Function]}
              type="username"
              value=""
            />
          </View>,
          <View
            style={
              Object {
                "flex": 0.1,
                "margin": 10,
              }
            }
          >
            <Input
              label="Password"
              onTextInput={[Function]}
              type="password"
              value=""
            />
          </View>,
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 0.3,
                "flexDirection": "row",
                "justifyContent": "center",
              }
            }
          >
            <Button
              buttonPress={[Function]}
              buttonStyle={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#EA572D",
                  "borderRadius": 60,
                  "flex": 0.5,
                  "justifyContent": "center",
                  "padding": 15,
                }
              }
              title="Submit"
            />
          </View>,
        ],
        "style": Object {
          "backgroundColor": "#fff",
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "fontFamily": "Futura",
                  "fontSize": 24,
                  "fontWeight": "500",
                }
              }
            >
              Stock & Exchange Search
            </Text>,
            "style": Object {
              "alignItems": "center",
              "flex": 0.2,
              "justifyContent": "center",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "Stock & Exchange Search",
              "ellipsizeMode": "tail",
              "style": Object {
                "fontFamily": "Futura",
                "fontSize": 24,
                "fontWeight": "500",
              },
            },
            "ref": null,
            "rendered": "Stock & Exchange Search",
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Input
              label="Username"
              onTextInput={[Function]}
              type="username"
              value=""
            />,
            "style": Object {
              "flex": 0.1,
              "margin": 10,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "label": "Username",
              "onTextInput": [Function],
              "type": "username",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Input
              label="Password"
              onTextInput={[Function]}
              type="password"
              value=""
            />,
            "style": Object {
              "flex": 0.1,
              "margin": 10,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "label": "Password",
              "onTextInput": [Function],
              "type": "password",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Button
              buttonPress={[Function]}
              buttonStyle={
                Object {
                  "alignItems": "center",
                  "backgroundColor": "#EA572D",
                  "borderRadius": 60,
                  "flex": 0.5,
                  "justifyContent": "center",
                  "padding": 15,
                }
              }
              title="Submit"
            />,
            "style": Object {
              "alignItems": "center",
              "flex": 0.3,
              "flexDirection": "row",
              "justifyContent": "center",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "buttonPress": [Function],
              "buttonStyle": Object {
                "alignItems": "center",
                "backgroundColor": "#EA572D",
                "borderRadius": 60,
                "flex": 0.5,
                "justifyContent": "center",
                "padding": 15,
              },
              "title": "Submit",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
